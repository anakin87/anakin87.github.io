<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="https://anakin87.github.io/feed_style.xsl" type="text/xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <tabi:metadata xmlns:tabi="https://github.com/welpo/tabi">
        <tabi:base_url>https:&#x2F;&#x2F;anakin87.github.io&#x2F;</tabi:base_url>
        <tabi:separator>
            •
        </tabi:separator>
        <tabi:about_feeds>This is a web feed, also known as an Atom feed. Subscribe by copying the URL from the address bar into your newsreader. Visit About Feeds to learn more and get started. It&#x27;s free.</tabi:about_feeds>
        <tabi:visit_the_site>Visit website</tabi:visit_the_site>
        <tabi:recent_posts>Recent posts</tabi:recent_posts>
        <tabi:last_updated_on>Updated on $DATE</tabi:last_updated_on>
        <tabi:default_theme></tabi:default_theme>
        <tabi:post_listing_date>date</tabi:post_listing_date>
        <tabi:current_section>Information Extraction</tabi:current_section>
    </tabi:metadata><link rel="extra-stylesheet" href="https://anakin87.github.io/skins/indigo_ingot.css?h=d429472afbb246441b1a" /><title>~/anakin87 - Information Extraction</title>
        <subtitle>Personal website of Stefano Fiorucci, AI&#x2F;NLP&#x2F;Software Engineer.</subtitle>
    <link href="https://anakin87.github.io/tags/information-extraction/atom.xml" rel="self" type="application/atom+xml"/>
    <link href="https://anakin87.github.io/tags/information-extraction/" rel="alternate" type="text/html"/>
    <generator uri="https://www.getzola.org/">Zola</generator><updated>2024-08-02T00:00:00+00:00</updated><id>https://anakin87.github.io/tags/information-extraction/atom.xml</id><entry xml:lang="en">
        <title>🗂️⛏️ Structured data extraction with Small Language Models</title>
        <published>2024-08-02T00:00:00+00:00</published>
        <updated>2024-08-02T00:00:00+00:00</updated>
        <author>
            <name>Stefano Fiorucci</name>
        </author>
        <link rel="alternate" href="https://anakin87.github.io/blog/structured-data-extraction/" type="text/html"/>
        <id>https://anakin87.github.io/blog/structured-data-extraction/</id>
        
            <content type="html">&lt;p&gt;I like playing with small language models and applying them to practical problems.&lt;&#x2F;p&gt;
&lt;p&gt;Recently, I turned one of these experiments into a step-by-step recipe for the Open-Source AI cookbook (by 🤗 Hugging Face)!&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a class=&quot;external&quot; href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;learn&#x2F;cookbook&#x2F;en&#x2F;information_extraction_haystack_nuextract&quot;&gt;👨‍🍳📓 Check it out&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;video src=&quot;data_extraction.mp4&quot; controls autoplay loop&gt;&lt;&#x2F;video&gt;&lt;&#x2F;p&gt;
&lt;p&gt;🎯 Goal: automatically extract structured information from startup funding announcements found on the web.&lt;&#x2F;p&gt;
&lt;p&gt;In this notebook, you’ll discover how to:&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;🏗️ Build an Information Extraction pipeline orchestrated by Haystack&lt;&#x2F;li&gt;
&lt;li&gt;🧠 Use &lt;a class=&quot;external&quot; href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;numind&#x2F;NuExtract&quot;&gt;NuExtract&lt;&#x2F;a&gt;, a powerful Small Language Model (3.8B) fine-tuned for data extraction (by NuMind)&lt;&#x2F;li&gt;
&lt;li&gt;🗒️ Visualize results with Pandas&lt;&#x2F;li&gt;
&lt;li&gt;🕵️ Create a simple graph to derive insights, such as the relationships between companies and investors&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;🙏 Tuana Çelik, Merve Noyan, Steven Liu for their help and support!&lt;&#x2F;p&gt;
</content>
        <summary type="html">Combine RAG on a knowledge base with Web Search to intelligently answer user questions.</summary>
        </entry><entry xml:lang="en">
        <title>🧪🐦‍⬛📑 From raw text to structured data with open LLMs and function calling</title>
        <published>2024-03-20T00:00:00+00:00</published>
        <updated>2024-03-20T00:00:00+00:00</updated>
        <author>
            <name>Stefano Fiorucci</name>
        </author>
        <link rel="alternate" href="https://anakin87.github.io/blog/raven-info-extraction/" type="text/html"/>
        <id>https://anakin87.github.io/blog/raven-info-extraction/</id>
        
            <content type="html">&lt;!-- toc --&gt;
&lt;h2 id=&quot;dart-the-challenge&quot;&gt;🎯 The challenge&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;you have a pile of unstructured texts from which you want to extract information in structured form&lt;&#x2F;li&gt;
&lt;li&gt;the desired information can vary dynamically&lt;&#x2F;li&gt;
&lt;li&gt;you want to combine tasks like text classification, NER, summarization, etc.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;Language Models with function calling capabilities can be flexible tools 🛠️ for this job!&lt;&#x2F;p&gt;
&lt;!-- Linking the exact notebook because it&#x27;s going to be deleted from the cookbook --&gt;
&lt;p&gt;&lt;strong&gt;📓 Take a look at the &lt;a class=&quot;external&quot; href=&quot;https:&#x2F;&#x2F;colab.research.google.com&#x2F;github&#x2F;deepset-ai&#x2F;haystack-cookbook&#x2F;blob&#x2F;c4e70ea69f8f3a36133bb239a0ade70e35577e85&#x2F;notebooks&#x2F;information_extraction_raven.ipynb&quot;&gt;notebook&lt;&#x2F;a&gt;&lt;&#x2F;strong&gt;&lt;&#x2F;p&gt;
&lt;div &gt;
    &lt;iframe class=&quot;pdf&quot; src=&quot;.&amp;#x2F;raven.pdf&quot;  height=&quot;700&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;&#x2F;iframe&gt;
&lt;&#x2F;div&gt;&lt;h2 id=&quot;key-a-personal-journey&quot;&gt;🗝️ A (personal) journey&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;It all began with &lt;a class=&quot;external&quot; href=&quot;https:&#x2F;&#x2F;gist.github.com&#x2F;kylemcdonald&#x2F;dbac21de2d7855633689f5526225154c&quot;&gt;Kyle McDonald’s gist&lt;&#x2F;a&gt;, where GPT-3.5-turbo was used to extract structured information from an article.&lt;&#x2F;li&gt;
&lt;li&gt;Fascinated by this idea, I explored the use of open models fine-tuned for function calling: I experimented with Gorilla OpenFunctions, to extract information about animals.&lt;&#x2F;li&gt;
&lt;li&gt;Now: armed with the powerful &lt;a class=&quot;external&quot; href=&quot;https:&#x2F;&#x2F;huggingface.co&#x2F;Nexusflow&#x2F;NexusRaven-V2-13B&quot;&gt;🐦‍⬛ NexusRaven V2 model&lt;&#x2F;a&gt; (by Nexusflow) and Haystack 2.0, I revisited the experiment and made it more challenging.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;sparkles-results&quot;&gt;✨ Results&lt;&#x2F;h2&gt;
&lt;ul&gt;
&lt;li&gt;Haystack’s LLM framework is model agnostic, so model switching went smoothly&lt;&#x2F;li&gt;
&lt;li&gt;Nexus Raven outperforms Gorilla OpenFunctions for this use case&lt;&#x2F;li&gt;
&lt;li&gt;Using a statistical model carries some caveats, which I have outlined in the notebook.&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;“Let’s unlock the potential of unstructured text, one function call at a time.”&lt;&#x2F;p&gt;
&lt;p&gt;☝ The last sentence is generated by ChatGPT, but I found it silly and funny. 😁&lt;&#x2F;p&gt;
</content>
        <summary type="html">Discover a hacky but effective way to extract structured using open LLMs with function calling capabilities (NexusRaven V2)</summary>
        </entry>
</feed>
